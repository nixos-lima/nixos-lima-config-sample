name: NixOS Lima on Ubuntu

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  nixos-sample:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04]
        guest-arch: ['aarch64', 'x86_64']
      fail-fast: false
    env:
      # HOST_ARCH value must match string in Lima download filename
      HOST_ARCH: ${{ matrix.os == 'ubuntu-24.04' && 'x86_64' || (matrix.os == 'ubuntu-24.04-arm' && 'aarch64') || 'unknown' }}
      LIMA_VERSION: "v1.2.1"
      GUEST_HOST_NAME: "nixsample"
      GUEST_USER: "lima"
    name: NixOS-${{ matrix.guest-arch }} Lima on ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: "Install QEMU"
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends ovmf qemu-system-x86 qemu-system-aarch64 qemu-efi-aarch64 qemu-utils
          sudo modprobe kvm
          # `sudo usermod -aG kvm $(whoami)` does not take an effect on GHA
          if [ "${{ matrix.os }}" == "ubuntu-24.04" ]; then
            sudo chown $(whoami) /dev/kvm
          fi

      - name: "Set up Lima"
        uses: lima-vm/lima-actions/setup@v1
        id: lima-actions-setup
        with:
          version: ${{ env.LIMA_VERSION }}
          additional_guestagents: ${{ matrix.os == 'ubuntu-24.04' && matrix.guest-arch == 'aarch64' && 'true' || (matrix.os == 'ubuntu-24.04-arm' && 'true') || 'false' }}

      - name: "Cache ~/.cache/lima"
        uses: actions/cache@v4
        with:
          path: ~/.cache/lima
          key: os-${{ matrix.os }}-NixOS-Lima-${{ steps.lima-actions-setup.outputs.version }}-guest-${{ matrix.guest-arch }}

      - name: "Start an instance of NixOS"
        env:
          # Use env variable QEMU_SYSTEM_AARCH64 to override Lima's QEMU configuration on aarch64 host
          QEMU_SYSTEM_AARCH64: ${{ env.HOST_ARCH == 'aarch64' && 'qemu-system-aarch64 -machine virt -cpu max' || 'qemu-system-aarch64' }}
        run: |
          set -eux
          limactl start --vm-type qemu --arch ${{ matrix.guest-arch }} --name=${{ env.GUEST_HOST_NAME }} --network=lima:user-v2 --set '.user.name = "${{ env.GUEST_USER }}"' nixos.yaml

      - name: "Update and Rebuild NixOS"
        run: |
          set -eux
          ./setup-nixos.sh ${{ env.GUEST_HOST_NAME }} ${{ env.GUEST_USER }} ${{ env.GUEST_HOST_NAME }}-${{ matrix.guest-arch }}

      - name: "Initialize Home Manager"
        if: false # Disable for now to try to avoid timeouts
        run: |
          set -eux
          ./setup-home-manager.sh ${{ env.GUEST_HOST_NAME }}  ${{ env.GUEST_USER }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: artifacts-os-${{ matrix.os }}-guest-${{ matrix.guest-arch }}-lima-errlog
          path: ~/.lima/${{ env.GUEST_HOST_NAME }}/*.log

